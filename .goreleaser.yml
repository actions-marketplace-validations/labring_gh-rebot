before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - id: gh-rebot
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X github.com/labring-actions/gh-rebot/pkg/version.gitVersion={{.Version}}
      - -X github.com/labring-actions/gh-rebot/pkg/version.gitCommit={{.ShortCommit}}
      - -X github.com/labring-actions/gh-rebot/pkg/version.buildDate={{.Date}}


dockers:
  - use: buildx
    ids:
      - gh-rebot
    goos: linux
    goarch: amd64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/gh-rebot:{{ .Tag }}-amd64
    dockerfile: Dockerfile
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --build-arg=TARGETARCH=amd64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=gh-rebot
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
      - --label=org.opencontainers.image.description="Automatically github bot for Sealos using comment and cmd"
      - --label=org.opencontainers.image.licenses="Apache 2.0"
      - --label=org.opencontainers.image.source="https://github.com/labring-actions/gh-rebot"
  - use: buildx
    ids:
      - gh-rebot
    goos: linux
    goarch: arm64
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/gh-rebot:{{ .Tag }}-arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --build-arg=TARGETARCH=arm64
      - --label=io.sealos.image.created={{.Date}}
      - --label=io.sealos.image.title=gh-rebot
      - --label=io.sealos.image.revision={{.ShortCommit}}
      - --label=io.sealos.image.version={{.Tag }}
      - --label=io.sealos.image.auth={{ .Env.USERNAME }}
      - --label=org.opencontainers.image.description="Automatically github bot for Sealos using comment and cmd"
      - --label=org.opencontainers.image.licenses="Apache 2.0"
      - --label=org.opencontainers.image.source="https://github.com/labring-actions/gh-rebot"
docker_manifests:
  - name_template: ghcr.io/{{ .Env.USERNAME }}/gh-rebot:{{ .Tag }}
    image_templates:
      - ghcr.io/{{ .Env.USERNAME }}/gh-rebot:{{ .Tag }}-amd64
      - ghcr.io/{{ .Env.USERNAME }}/gh-rebot:{{ .Tag }}-arm64


#archives:
#  - replacements:
#      darwin: darwin
#      linux: linux
#      windows: windows
#      amd64: amd64
#      arm64: arm64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^test:'
      - '^chore'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
    - title: 'New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: 'Security updates'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: 'Documentation updates'
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: 'Build process updates'
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999
docker_signs:
  - cmd: cosign
    artifacts: manifests
    output: true
    args:
      - 'sign'
      - '${artifact}@${digest}'
      - --yes

release:
  prerelease: auto
  header: |
    ## labring-actions: gh-rebot {{ .Tag }}
    We are excited to present to you the latest tool from labring-actions: gh-rebot {{ .Tag }}! Gh-rebot is a powerful automation tool designed specifically for GitHub repositories, with features such as handling issue and PR comments, automatic publishing, and auto-generating changelog files. In this article, we will provide a brief introduction to the main features of gh-rebot and how to obtain the corresponding Docker image.

    ## Usage Instructions
  
    gh-rebot is a powerful tool that can help you effortlessly handle issue and PR comments in your GitHub repositories while also automatically publishing and generating changelog files. To start using gh-rebot, you first need to download the precompiled binary file suitable for your operating system. You can find these files on our [GitHub Releases page](https://github.com/labring-actions/gh-rebot/releases).
  
    ### Installation
  
    1. Download the precompiled binary file suitable for your operating system.
    2. Unzip the binary file and place it in your `PATH`.

    ### Usage

    In the command line, run the following command to start gh-rebot:
  
    ```bash
    gh-rebot [OPTIONS]
    ```
  
    `OPTIONS` can include the following parameters:
  
       - `--help`: Display help information.
       - `--version`: Display the version information of gh-rebot.
       - Other optional parameters.

    ## Docker Image

    For added convenience, we also provide a Docker image for gh-rebot. You can obtain the image with the following command:

    ```bash
    docker pull ghcr.io/labring-actions/gh-rebot:{{ .Tag }}
    ```

    To run the gh-rebot Docker container, use the following command:

    ```bash
    docker run --rm -it ghcr.io/labring-actions/gh-rebot:{{ .Tag }} [OPTIONS]
    ```
  
    Here, `OPTIONS` are the options you want to pass to gh-rebot.

  footer: |
    **Full Changelog**: https://github.com/goreleaser/goreleaser/compare/{{ .PreviousTag }}...{{ .Tag }}

    * * *
    
    Thank you for your interest and support in labring-actions and gh-rebot! If you encounter any problems during use, please feel free to submit an issue in our [GitHub repository](https://github.com/labring-actions/gh-rebot). We will resolve your issue as soon as possible.
